import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage
import com.bmuschko.gradle.docker.tasks.image.DockerPushImage
import com.bmuschko.gradle.docker.tasks.image.Dockerfile

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.1'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'com.bmuschko.docker-remote-api' version "$dockerVersion" apply true
}

group = 'com.ingress'
def hash = 'git rev-parse --short HEAD'.execute().text.trim()
version = "$projectVersion.$hash"

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    runtimeOnly 'com.mysql:mysql-connector-j'
    implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.0.2'
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

}

tasks.named('test') {
    useJUnitPlatform()
}


task dockerFile(type: Dockerfile, dependsOn: assemble) {
    destFile.set(project.file('Dockerfile'))
    from "alpine:$alpineVersion"
    runCommand 'apk add --no-cache openjdk17'
    runCommand 'apk add --no-cache tzdata'
    copyFile "build/libs/${project.name}-${project.version}.jar", '/app/'
    copyFile "gradle.properties", '/app/gradle.properties'
    workingDir '/app/'
    entryPoint 'java'
    defaultCommand '-jar', "/app/${project.name}-${project.version}.jar"
}


task dockerBuild(type: DockerBuildImage, dependsOn: dockerFile) {
    inputDir.set(file("$projectDir/."))
    doLast {
        println("creatig image: $dockerRepoUrl/${project.name}:$version")
    }
    images.add("$dockerRepoUrl/ing-${project.name}:$version")
}
